{{ define "title" }}<title>{{ .Title }}</title>{{ end }}
{{ define "content" }}

<script>
window.addEventListener('load', function() {
    addinputs();
})
</script>

<script>
  function getlink() {
    {{/*idx 0 is external proto, idx 1 is external address, idx 2 is external port (if defined)*/}}
    {{ $externalPortDefined := index .Variable 2 }}
    return fetch('{{ index .Variable 0 }}://{{ index .Variable 1 }}{{ if ne $externalPortDefined "0" }}:{{ index .Variable 2 }}{{ end }}/api/link/?linkid={{ .LinkBeingEdited.ID }}')
      .then(data => {
      return data.json();
      })
  }
  async function addinputs() {
    var x = document.getElementById("paramregexinput").value;
    var container = document.getElementById("rowvar");
    var regex = /\?P\<([\w+]+)\>/g;
    let matches = x.matchAll(regex);
    container.innerHTML = "";  // remove all inputs
    var data = await getlink();

    // This is an iterator, not an array
    // result[1] is the matched string
    for(let result of matches) {
      var varsfound = result;

      if (document.getElementById(result[1])) {
        continue
      }
      let tr = document.createElement("tr");
      let row = container.appendChild(tr);
      row.innerHTML = `
      <div><code>${result[1]}</code></div>
      <div class="btn-group-sm" role="group" aria-label="defaults toggle group">
  <input type="radio" class="btn-check" name="${"urlvar~" + result[1]}" id="${"radio1-" + result[1]}" value="input" autocomplete="off" required>
  <label class="btn btn-outline-secondary" for="${"radio1-" + result[1]}">input</label>

  <input type="radio" class="btn-check" name="${"urlvar~" + result[1]}" id="${"radio2-" + result[1]}" value="error" autocomplete="off">
  <label class="btn btn-outline-secondary" for="${"radio2-" + result[1]}">error</label>

  <input type="radio" class="btn-check" name="${"urlvar~" + result[1]}" id="${"radio3-" + result[1]}" value="none" autocomplete="off">
  <label class="btn btn-outline-secondary" for="${"radio3-" + result[1]}">none</label>
</div>`;

      for (let i = 1; i < 4; i++) {
        let checkbox = document.getElementById("radio" + i + "-" + result[1])
        checkbox.checked = (checkbox.value == data.LinkVariables[result[1]] ? true : false)
      }

    }

    if (!varsfound) {
      container.innerHTML = "<p>(no variables used)</p>";
    }
  }
</script>

{{ $linkid := .LinkBeingEdited.ID }}
{{ $isspecial := .IsSpecial }}
{{ $numvars := len .LinkBeingEdited.LinkVariables }}

<script type="text/javascript" src="/static/js/jquery.min.js"></script>
<script type="text/javascript" src='/static/js/go.js'> </script>

<div class="row">
  <div class="col-sm-6" style="margin-bottom: 10px;">
  <div class="card">
    <div class="card-header">

      {{ if .LinkExists }}<h4>Edit Link Details</h4>{{ else }}<h4>Enter New Link Details</h4>{{ end }}
      {{/* {{ .RedirectorName }}/{{ if ne .Keyword "" }}{{ .Keyword }}{{ else }}{{ index .LinkBeingEdited.Lists 0 }}{{ end }} */}}

    </div>
    <div class="card-body">

      <div class="inner">
        <form action="/api/link/" method="POST">
        {{/* This duplicated block of code here is only here for one hacky reason. Users hitting 'Enter' on any form field will trigger the top
        submit button on the form visually. Putting it here and making it invisible makes Enter == "Submit new link". */}}
        {{ if .LinkExists }}
        <button class="visually-hidden" type="submit" title="Submit Changes" value="Submit Changes" {{ if eq .ActiveUser "" }}disabled{{ end }}>Submit Changes</button>
        {{ else }}
        <button class="visually-hidden" type="submit" title="Submit New Link" value="Submit Link" {{ if eq .ActiveUser "" }}disabled{{ end }}>Submit New Link</button>
        {{ end }}
        {{/* END of duplicated button code block */}}

          <!-- This tells the server where to redirect after the form submission. -->
          <input type="hidden" name="returnto" value="{{ .Keyword }}"/>
          <input type="hidden" name="internal" value="true"/>
          <input type="hidden" name="linkid" value="{{ $linkid }}"/>

          <table class="table linkedit">
            <tr>
              <td>Title</td>
              <td>
                <input type="text" name="title" class="form-control" value="{{ if ne $linkid 0 }}{{ html .LinkBeingEdited.Title }}{{ end }}" placeholder=""/>
              </td>
            </tr>

            <tr>
              <td>Tags</td>
              <td>
              {{ $thislist := .GetMyList .Keyword }}
              {{ if $thislist }}
                {{ $tagsString := $thislist.GetTagString $linkid " " }}
                {{/* The tags will be space-delimited here */}}
                <input type="text" name="tag" class="form-control" value="{{ $tagsString }}" placeholder=""/>
              {{ else }}
                <input type="text" name="tag" class="form-control" value="" placeholder=""/>
              {{ end }}
              <small class="form-text text-muted">
                 (optional) Multiple tags can be supplied, separated with spaces.
                </small>
              </td>
            </tr>

            <tr>
              <td>Example Parameter</td>
              <td>
                <input type="text" id="paraminput" name="paraminput" class="form-control" value="{{ $.GetExtraction.ExampleParam }}" placeholder=""/>
                <small class="form-text text-muted">
                  This is an example input parameter users will enter. Use this to test the extraction regex.
                </small>
              </td>
            </tr>

            <tr>
            <td>Extraction Regex</td>
            <td>
              <input type="text" id="paramregexinput" name="paramregexinput" class="form-control" value="{{ $.GetExtraction.Regex }}" placeholder="" oninput="addinputs()"/>
              <small class="form-text text-muted">
                Define a regex using named capture groups to pull data out of the user's input parameter.
              </small>
            </td>
            </tr>

            <tr id="urlvars">
              <td>Named Capture Fallback</td>
              <td>
                <div id="rowvar"><p>(no variables used)</p></div>

                {{/* only show the helper text containing defaults if link variables are set currently on this link */}}
                {{ if gt $numvars 0 }}
                  <small id="urlHelpBlock" class="form-text text-muted">current defaults -
                  {{ range $pattern, $replacement := .LinkBeingEdited.LinkVariables }}
                  {{$pattern}}:{{ $replacement}}
                  {{- end }}
                  </small>
                {{- end }}

              </td>
            </tr>

            <tr>
              <td>URL</td>
              <td>
                <textarea id="urlinput" name="url" rows="4" cols="50" placeholder="www.example.com" class="form-control" aria-describedby="urlHelpBlock" required>{{ if ne $linkid 0 }}{{ .LinkBeingEdited.URL }}{{ end }}</textarea>
                <small id="urlHelpBlock" class="form-text text-muted">
                  Use {string} to place a capture group into the URL. Use {$string} for string variables. Use {$map[string]} for map lookups.
                </small>
              </td>
            </tr>

            <tr>
              <td>Link Expiration</td>
              {{ if not .LinkExists }}
              <td>
                <select class="form-control" name="expiretime">
                  <option value="99999h">never</option>
                  <option value="burn">burn after reading</option>
                  <option value="10m">10 minutes</option>
                  <option value="1h">1 hour</option>
                  <option value="24h">24 hours</option>
                  <option value="720h">1 month</option>
                  <option value="4320h">6 months</option>
                  <option value="8640h">1 year</option>
                </select>
              </td>
              {{ else }}
              <td><strong>{{ $.PrettyTime .LinkBeingEdited.Dtime }}</strong></td>
              {{ end }}
            </tr>
            {{ if not $isspecial }}

            <tr>
              <td>Lists</td>
                <td>
                    {{ if not .LinkExists }}
                    <a style="color: #4dc5d9 !important;" href="/.{{ .Keyword }}">{{ .Keyword }}</a><br>
                    {{ end }}
                    <!-- get all lists for a particular link -->
                    {{ if .LinkExists }}
                      {{ range .LinkBeingEdited.Lists }}
                        {{ if ne $.Keyword . }}
                        <a href="/.{{ . }}">{{ . }}</a><br>
                          {{ else }}
                        <a style="color: #4dc5d9 !important;" href="/.{{ . }}">{{ . }}</a>
                        <br>

                    </div>
                        {{ end }}
                      {{ end }}
                    {{ end }}
                    <input class="form-control" type="text" name="otherlists" value="" placeholder="list2 list3" />
              </td>
            </tr>
          {{ end }}

          <tr>
          <td>
            <td>
            <a role="button" class="btn btn-outline-secondary" title="Cancel and go back" href="/.{{ .Keyword }}">Cancel</a>
              {{ if .LinkExists }}
              <button class="btn btn-outline-secondary" type="submit" title="Remove link from this list only" value="true" name="delete"{{ if eq .ActiveUser "" }}disabled{{ end }}>Unlink from <span style="color: #4dc5d9 !important;">{{ .Keyword }}</span></button>
              <button class="btn btn-primary" type="submit" title="Submit Changes" value="Submit Changes"{{ if eq .ActiveUser "" }}disabled{{ end }}>Submit Changes</button>
              <!-- <button class="btn btn-danger btn-sm" type="submit" title="Remove link from this list" value="decouple" name="delete">Unlink From <b>{{ .Keyword }}</b></button> -->
              {{ else }}
              <button class="btn btn-primary" type="submit" title="Submit New Link" value="Submit Link"{{ if eq .ActiveUser "" }}disabled{{ end }}>Submit New Link</button>
              {{ end }}
            </td>
          </tr>
        </table>
      </form>
    </div>
    </div>
  </div>

  </div>
  <!-- variables table -->
  {{ $special := .LinkBeingEdited.Special }}
  {{ $thelink := .LinkBeingEdited}}
  <div class="col-sm-6" style="margin-bottom: 10px;">
    <div class="card">
      <div class="card-header"><h4>Redirect Configuration and Behavior</h4></div>
      <div class="card-body">
        <p>Usages of this redirect vary based on the number of tags it has.</p>
        <p>The possible redirects to this link: <br>
        {{/* The check for the list here prevents crashes due to garbage returnto= fields input by the user */}}
        {{ $thislist := .GetMyList .Keyword }}

        {{ $isNotLinkZero := ne .LinkBeingEdited.ID 0 }}
        {{ if and $isNotLinkZero $thislist }}
          {{ $usages := $thislist.GetUsages .LinkBeingEdited.ID }}
            {{ range $usage := $usages }}
            <code>{{ $usage }}</code><br>
            {{ end }}
        {{ end }}

        {{/* help text for complex configurations */}}
        <div>
          {{ if ne $numvars 0 }}
          <p>
          There {{ if ne $numvars 1 }}are{{ else }}is{{ end }} {{ $numvars }} named capture{{ if ne $numvars 1 }}s{{ end }} for this redirect. This means the user's input
          parameter will have {{ $numvars }} named variable{{ if ne $numvars 1 }}s{{ end }} extracted.
          </p>
          {{ range $name, $value  := .LinkBeingEdited.LinkVariables }}
          <p>
          Link variable <code>{{ $name }}</code> has a default of <b>{{ $value }}</b>.
          {{ if eq $value "input" }}
          This means if the lookup fails, the exact captured input is used in the URL.
          {{ else if eq $value "error" }}
          This means if the lookup fails, an error is raised to the user attempting to redirect.
          {{ else if eq $value "none" }}
          This means if the lookup fails, the user does not get redirected and lands on this page.
          {{ end }}
          </p>
            <br>
          {{ end }} {{/* end of range */}}
          {{ end }} {{/* end of ne 0 check */}}
        </div>



        <div class="inner">
          <form action="/_variables_/" method="POST">
            <!-- This tells the server where to redirect after the form submission. -->
            <input type="hidden" name="returnto" value="{{ .Keyword }}"/>
            {{ if .LinkExists }}
            <input type="hidden" name="linkid" value="{{ $linkid }}"/>
            {{ end }}

            {{ $loggedin := ne .ActiveUser "" }}
            {{ $notdefault := ne .LinkBeingEdited.ID 0 }}
            {{ if and $loggedin $notdefault }}
            <h3>Recent Edits</h3>
            <table class="table">
              {{/* metadata */}}
              <tr>
              <thead>
              <th>Time</th>
              <th>Editor</th>
              <th>Message</th>
              </thead>

              {{ range .GetLinkEdits .LinkBeingEdited.ID }}
              <tr><td>{{ $.PrettyTime .EditDate }}</td><td>{{ .EditUser }}</td><td>{{ .EditMsg }}</td></tr>
              {{ end }}
            </table>
            {{ end }}

          </form>
        </div>
      </div>
    </div>

  </div>
</div>



</div>

<!-- TODO edit data code goes here -->

<!-- <script type="application/javascript" src="/js/go.js"></script> -->

{{ end }}
